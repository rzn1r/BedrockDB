import{world}from"@minecraft/server";const NAMESPACE="bedrockDB:";export class BedrockDB{constructor(e){this.dbName=e}fullKey(e){return`${NAMESPACE}${this.dbName}:${e}`}set(e,t){if(void 0===t)throw new Error("Cannot store undefined value in BedrockDB.");const r=JSON.stringify(t);world.setDynamicProperty(this.fullKey(e),r)}get(e){const t=world.getDynamicProperty(this.fullKey(e));if(void 0===t)return null;try{return JSON.parse(t)}catch(t){return console.warn(`[BedrockDB] Failed to parse data for key "${e}":`,t),null}}delete(e){world.setDynamicProperty(this.fullKey(e),void 0)}has(e){return void 0!==world.getDynamicProperty(this.fullKey(e))}increment(e,t=1){let r=this.get(e);(null===r||isNaN(r))&&(r=0);const o=r+t;return this.set(e,o),o}decrement(e,t=1){return this.increment(e,-t)}clear(){const e=this.keys();for(const t of e)this.delete(t)}keys(){return world.getDynamicPropertyIds().filter(e=>e.startsWith(`${NAMESPACE}${this.dbName}:`)).map(e=>e.replace(`${NAMESPACE}${this.dbName}:`,""))}}